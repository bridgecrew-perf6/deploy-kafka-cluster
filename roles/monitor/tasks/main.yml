---
- name: add consul repo
  yum_repository:
    name: hashicorp
    description: 'Hashicorp Stable - $basearch'
    baseurl: 'https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable'
    enabled: yes
    gpgcheck: yes
    gpgkey: 'https://rpm.releases.hashicorp.com/gpg'
    state: present

- name: install consul package
  yum:
    name: consul
    state: latest

- name: transfer configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - {src: consul.hcl.j2, dest: /etc/consul.d/consul.hcl, mode: 755, owner: consul, group: consul }

- name: create configuration directory
  file:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { name: /opt/consul, state: directory, owner: consul, group: consul, mode: 755}

- name: start consul server
  service:
    name: consul
    state: restarted
    enabled: true
    daemon_reload: yes

- name: extract prometheus binary package
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64.tar.gz", dest: /tmp/ }

- name: add prometheus group
  group:
    name: prometheus
    state: present

- name: add prometheus user
  user:
    name: prometheus
    group: prometheus
    state: present

- name: create configuration directory
  file:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { name: /etc/prometheus, state: directory, owner: prometheus, group: prometheus, mode: 755}
    - { name: /var/lib/prometheus, state: directory, owner: prometheus, group: prometheus, mode: 755}

- name: copy binary files to execution path
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    remote_src: yes
  with_items: 
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64/promtool", dest: /usr/local/bin/, mode: 755, owner: prometheus, group: prometheus}
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64/prometheus", dest: /usr/local/bin/, mode: 755, owner: prometheus, group: prometheus}

- name: copy configuration files
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"

  with_items: 
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64/console_libraries", dest: /etc/prometheus/, mode: 755, owner: prometheus, group: prometheus}
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64/consoles", dest: /etc/prometheus/, mode: 755, owner: prometheus, group: prometheus}
    - { src: "/tmp/prometheus-{{ version['prometheus'] }}.linux-amd64/prometheus.yml", dest: /etc/prometheus/, mode: 755, owner: prometheus, group: prometheus}
  
- name: update scrape configurations
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { src: prometheus.yml.j2, dest: /etc/prometheus/prometheus.yml, mode: 755, owner: prometheus, group: prometheus }

- name: transfer unit files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { src: prometheus.service.j2, dest: /usr/lib/systemd/system/prometheus.service, mode: 755, owner: prometheus, group: prometheus }

- name: start prometheus service
  service:
    name: prometheus
    state: restarted
    enabled: true
    daemon-reload: yes

- name: transfer grafana package
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "/tmp/grafana-enterprise-{{ version['grafana'] }}.x86_64.rpm", dest: /tmp/ }

- name: install grafana service
  yum:
    name: "/tmp/grafana-enterprise-{{ version['grafana'] }}.x86_64.rpm"
    state: installed

- name: start grafana service
  service:
    name: grafana-server
    state: restarted
    enabled: true
    daemon_reload: yes

- name: copy prometheus assistant script
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: prometheus_assistant.py, dest: /root/, mode: 755 }

- name: registe prometheus datasource
  shell: "/root/prometheus_assistant.py "

---
- name: Create kafka group
  group:
    name: "{{ item }}"
    state: present
  loop:
    - kafka

- name: Create kafka user
  user:
    name: "{{ item }}"
    home: "/home/{{ item }}"
    group: "{{ item }}"
    state: present
    shell: /sbin/nologin
  loop:
    - kafka

- name: Create kafka dir
  file:
    path: "{{ item }}"
    state: directory
    owner: kafka
    group: kafka
  with_items:
    - "/home/kafka/_package"
    - "/home/kafka/kafka-logs"

- name: extract kafka binary
  unarchive:
    src: "/tmp/kafka_{{ version['scala'] }}-{{ version['kafka'] }}.tar.gz"
    dest: /home/kafka/_package/
    owner: kafka
    group: kafka

- name: change scripts privileges
  file:
    name: "/home/{{ item }}/_package/bin"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 0755
    recurse: yes
  loop:
    - kafka

- name: update config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: kafka
    group: kafka
  with_items:
    - { src: server.properties.j2, dest: "/home/kafka/_package/config/server.properties", mode: 755 }

- name: enable service
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: kafka
    group: kafka
  with_items:
    - { src: kafka.service.j2, dest: "/etc/systemd/system/kafka.service", mode: 755 }
  notify:
    - enable and start kafka
  tags:
    - config

- name: copy exporter binary
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  with_items:
    - { src: kafka_exporter, dest: /root/exporters/, mode: 755 }

- name: deploy kafka exporter
  blockinfile:
    path: /root/exporters/start_exporter.sh
    marker: "# managed by ansible"
    block: "cd /root/exporters && nohup ./kafka_exporter --kafka.server={{ ansible_ssh_node }}:9092 &"
    state: present
  notify:
    - start kafka exporter
